Method 1:Merge Sort Using Recursion


public class Main
{
	public static void main(String[] args) {
	    int arr[]={34,23,78,56,12,90,78,45,76,12};
	    int n=arr.length;
	    
	    mergeSort(arr,0,n-1);
	    for(int i=0;i<n;i++){
		System.out.print(arr[i]+" ");
	    }
	}
	public static void mergeSort(int arr[],int s,int e){
	    if(s>=e){
	        return;
	    }
	    int mid=s+(e-s)/2;
	    
	    mergeSort(arr,s,mid);
	    mergeSort(arr,mid+1,e);
	    
	    merge(arr,s,e);
	}
	
	public static void merge(int arr[],int s,int e){
	    int mid=s+(e-s)/2;
	    
	    int len1=mid-s+1;
	    int len2=e-mid;
	    
	    int first[]=new int[len1];
	    int second[]=new int[len2];
	    
	    int mainArrayIndex=s;
	    for(int i=0;i<len1;i++){
	        first[i]=arr[mainArrayIndex++];
	    }
	    
	    mainArrayIndex=mid+1;
	    for(int i=0;i<len2;i++){
	        second[i]=arr[mainArrayIndex++];
	    }
	    
	    int index1=0;
	    int index2=0;
	    mainArrayIndex=s;
	    
	    while(index1<len1&&index2<len2){
	        if(first[index1]<second[index2]){
	        arr[mainArrayIndex++]=first[index1++];
	        }
	        else{
	            arr[mainArrayIndex++]=second[index2++];
	        }
	    }
	    
	    while(index1<len1){
	        arr[mainArrayIndex++]=first[index1++];
	    }
	    
	    while(index2<len2){
	        arr[mainArrayIndex++]=second[index2++];
	    }
	}
}
