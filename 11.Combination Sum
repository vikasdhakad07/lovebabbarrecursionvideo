Method:Combination Sum


class Solution {
    
    private void funCombination(int ind,int arr[],int target,List<List<Integer>> li,List<Integer> ds){
        if(ind==arr.length){
            if(target==0){
                li.add(new ArrayList<>(ds));
            }
            return;
        }
        
        if(arr[ind]<=target){
            ds.add(arr[ind]);
            funCombination(ind,arr,target-arr[ind],li,ds);
            ds.remove(ds.size()-1);
        }
        funCombination(ind+1,arr,target,li,ds);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
         List<List<Integer>> li=new ArrayList<>();
        funCombination(0,candidates,target,li,new ArrayList<>());
        return li;
    }
}
