Method 01:Longest Increasing Subsequence


public class Main
{
    
    public static int solve(int arr[], int curr, int prev, int n){
        if(curr==n){
            return 0;
        }
        
        int pick=0;
        if(prev==-1||arr[curr]>arr[prev]){
            pick=1+solve(arr, curr+1, curr, n);
        }
        
       
      int notpick=0+solve(arr, curr+1, prev, n);
    
        
        return Math.max(pick, notpick);
    }
	public static void main(String[] args) {
	    int arr[]={0, 1, 4, 3, 5, 4, 7, 9};
	    int n=arr.length;
	    int curr=0;
	    int prev=-1;
	    int ans=solve(arr, curr, prev, n);
		System.out.println(ans);
	}
}
